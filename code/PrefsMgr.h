/******************************************************************************
 PrefsMgr.h

	Copyright (C) 1999 by Glenn W. Bach.

	Base code generated by Codemill v0.1.0

 *****************************************************************************/

#ifndef _H_PrefsMgr
#define _H_PrefsMgr

#include <jx-af/jx/JXPrefsManager.h>
#include <jx-af/jcore/JPtrArray-JString.h>
#include <jx-af/jcore/JFontStyle.h>

class JXStringHistoryMenu;
class EditPrefsDialog;

enum
{
	kSProgramVersionID = 1,
	kSTreeOptionsID,
	kSAppID,
	kSChildWindowListID,
	kSDefaultWindowSizeID,
	kSgCSFSetupID,
	kSFilterVisibleID,
	kSEmpty4ID,
	kSEmpty5ID,
	kSMainToolBarID,
	kSEmpty8ID,
	kSEmpyt9ID,
	kSDelDeleteID,
	kSEmpty2ID,
	kSEmpty3ID,
	kSEmpty6ID,
	kSEmpty7ID,
	kSViewManPagePrefID,
	kSAltCSSetupID,
	kSFindFilePrefID,
	kSVersionCheckID,
	kSNewWindowsID,
	kSPerFolderPrefsID
};

const JSize kTreePrefCount = 7;

class PrefsMgr : public JXPrefsManager
{
public:

	PrefsMgr(bool* isNew);

	virtual	~PrefsMgr();

	JString	GetSystemGVersionStr() const;

	void	GetTreePreferences(bool prefs[]) const;
	void	SetTreePreferences(const bool prefs[]);

	bool	GetDefaultWindowSize(JSize* w, JSize* h) const;
	void	SaveDefaultWindowSize(const JSize w, const JSize h);

	bool	GetFilterStatePref() const;
	void	SaveFilterStatePref(const bool show);

	bool	RestoreProgramState(JPtrArray<JString>* children);
	void	SaveProgramState(const JPtrArray<JString>& children);

	bool	DelWillDelete() const;
	void	DelShouldDelete(const bool del);

	bool	WillOpenNewWindows() const;
	void	ShouldOpenNewWindows(const bool newWindows);

	bool	WillSaveFolderPrefs() const;
	void	ShouldSaveFolderPrefs(const bool perFolder);

	void	EditPrefs();

protected:

	virtual void	UpgradeData(const bool isNew, const JFileVersion currentVersion) override;
	virtual void	SaveAllBeforeDestruct() override;
	virtual void	Receive(JBroadcaster* sender, const Message& message) override;

private:

	EditPrefsDialog*	itsDialog;

private:

	void	UpdatePrefs();

public:

	static const JUtf8Byte* kPrefsChanged;

	class PrefsChanged : public JBroadcaster::Message
		{
		public:

			PrefsChanged()
				:
				JBroadcaster::Message(kPrefsChanged)
			{ };
		};
};

#endif
