#!/bin/bash

set -e;

SYS=`uname -o || uname -s`;		# Darwin doesn't support -o

if [[ $UID != 0 ]]; then
	SUDO="sudo";
fi

MODE=$1;
if [[ $MODE == release || $MODE == ci ]]; then
	echo -n 1 >| 0-RELEASE;
fi

INSTALL_ROOT=/usr/local;

if [[ $SYS == Darwin ]]; then

	if ! command -v brew > /dev/null; then
		echo Installing Homebrew...;
		$SUDO /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)";
	fi;

	if [[ $MODE != ci ]]; then
		brew install -q git-gui;

		if [[ ! -f ../JX/Makefile && -z $JX_ROOT ]]; then
			brew tap jafl/jx;
			brew install jafl/jx/jx-application-framework;
		fi
	fi

	INSTALL_ROOT=`brew --prefix`;

elif command -v apt-get; then

	# debian

	if [[ -z $SNAPCRAFT_BUILD_ENVIRONMENT ]]; then
		$SUDO apt update;
		if [[ $MODE != ci ]]; then
			$SUDO apt -y install git-gui;
		fi

		if [[ ! -f ../JX/Makefile && -z $JX_ROOT ]]; then
			curl -LO https://libjx.sourceforge.net/${MODE:-release}/jx-application-framework.deb;
			$SUDO apt -y remove nginx libgd3;	# hack
			$SUDO apt install ./jx-application-framework.deb;
		fi
	fi;

elif command -v dnf || command -v yum; then

	# redhat

	if command -v dnf; then
		PKGMGR=dnf;
	else
		PKGMGR=yum;
	fi

	$SUDO $PKGMGR -y install git-gui xterm;

elif command -v zypper; then

	# openSUSE

	$SUDO zypper -in install git-gui xterm;

elif [[ $SYS == Cygwin ]]; then

	ARCH=`uname -i`;
	if [[ $ARCH == x86_64 ]]; then
		SETUP=setup-x86_64.exe;
		echo "Unsupported architecture '$ARCH'.  Please file an issue on github.";
		exit 1;
	elif [[ ${ARCH:0:1} == i ]]; then
		SETUP=setup-x86.exe;
		SYS_CONFIG=sys/Linux-Intel-cygwin32;
		ACE_CONFIG=config-cygwin32.h;
		ACE_MAKE_CONFIG=platform_cygwin32.GNU;
	else
		echo "Unknown architecture '$ARCH'.  Please file an issue on github.";
		exit 1;
	fi

	$SETUP -q -P git-gui,xterm;

else

	echo "Unrecognized system!  Please file an issue on github.";
	exit 1;

fi

if [[ ! -d $INSTALL_ROOT/include/jx-af/ && ! -f ../JX/Makefile && -z $JX_ROOT ]]; then

	echo "Please install jx-application-framework.";
	exit 1;

fi

makemake;
